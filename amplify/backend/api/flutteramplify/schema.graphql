type Todo @model {
  id: ID!
  name: String!
  description: String
}

type HeartRate @model {
  id: ID!
  mHR: [Float]!
  fHR: [Float]!
  createdTime: AWSTimestamp!
}

type User @model {
  id: ID! 
  username: String!
  email: String
  avatarKey: String
  description: String
}

type CtgImage @model 
  @key(name: "CtgImagesByDataset", fields: ["dataset"], queryField: "CtgImagesByDataset" ) {
  id: ID! 
  ctgUrl: String
  ecgUrl: String
  dataset: String!
  userId: ID
  username: String
  createdTime: AWSTimestamp!
}


type SliderValue @model 
  @key(name: "SliderValueByCreatedTime", fields: ["deviceId","createdTime"], queryField: "SliderValueByCreatedTime") {
  deviceId: ID!
  createdTime: AWSTimestamp! 
  value: Float
}


type Ctg @model  @key(name: "byHospital", fields: ["hospitalID"]) @key(name: "byDoctor", fields: ["doctorID"]) @key(name: "byPatient", fields: ["patientID"]) {
  id: ID! 
  ctgUrl: String
  ecgUrl: String
  comment: String 
  patientID: ID 
  doctorID: ID
  hospitalID: ID 
  createdTime: AWSTimestamp!
}

type CtgNumerical @model  @key(name: "byHospital", fields: ["hospitalID"]) @key(name: "byDoctor", fields: ["doctorID"]) @key(name: "byPatient", fields: ["patientID"]) {
  id: ID!
  ctgJsonUrl: String
  ctgUrl: String
  ecgUrl: String
  comment: String 
  patientID: ID 
  doctorID: ID
  hospitalID: ID
  sessionTime: AWSTimestamp 
  createdTime: AWSTimestamp!
}

type Patient @model @auth(rules: [{allow: public}]) @key(name: "byDoctor", fields: ["doctorID"]) {
  id: ID!
  name: String
  phone: String
  address: String
  doctorID: ID
}

type Doctor @model @auth(rules: [{allow: public}]) @key(name: "byHospital", fields: ["hospitalID"]) {
  id: ID!
  name: String
  phone: String
  address: String
  department: String
  hospitalID: ID
  Patients: [Patient] @connection(keyName: "byDoctor", fields: ["id"])
}

type Hospital @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  phone: String
  address: String
}



